/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Inventory;
import javax.swing.*;
import java.sql.*;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
/**
 *
 * @author olirv
 */
public class supplier extends javax.swing.JFrame {

    /**
     * Creates new form supplier
     */
    Connection con;
    Statement st;
    PreparedStatement ps;
    ResultSet rs;
    String sid;
    /**
     * Creates new form cancelorder
     */
    
    public supplier(String inp_sid) {
        sid = inp_sid;
        initComponents();
        try{
        Class.forName("oracle.jdbc.OracleDriver");
        //JOptionPane.showMessageDialog(this,"Driver Loaded!");
        try {
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:ORCL",
                    "scott","tiger");
            //JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
        }
        catch (SQLException ex) {
            Logger.getLogger(cancelorder.class.getName()).log(Level.SEVERE,null, ex);
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
        }
        catch(ClassNotFoundException ex){
            Logger.getLogger(cancelorder.class.getName()).log(Level.SEVERE,null, ex);
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        icon = new javax.swing.JLabel();
        jlabel1 = new javax.swing.JLabel();
        pid = new javax.swing.JTextField();
        jlabel2 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        supply = new javax.swing.JButton();
        back = new javax.swing.JButton();
        home = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Supplier - Supply");
        setBackground(new java.awt.Color(51, 255, 51));
        setForeground(java.awt.Color.cyan);

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/supplier.png"))); // NOI18N

        jlabel1.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jlabel1.setText("Enter Product ID");

        jlabel2.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jlabel2.setText("Enter Quantity");

        supply.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        supply.setText("Supply");
        supply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplyMouseClicked(evt);
            }
        });

        back.setText("Back");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        home.setText("Home");
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/logo.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlabel1)
                                            .addComponent(jlabel2))
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pid, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(supply))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(home)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(back)))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel1)
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlabel1)
                            .addComponent(pid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlabel2)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(89, 89, 89)
                        .addComponent(supply)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(home)
                    .addComponent(back))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void supplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplyMouseClicked
    String productID = pid.getText();
    int enteredQuantity = Integer.parseInt(quantity.getText());

    try {
        // Check if max_quantity >= (max_quantity + enteredQuantity) in inventory table
        String query = "SELECT maxquantity FROM inventory WHERE pid = ?";
        PreparedStatement statement = con.prepareStatement(query);
        statement.setString(1, productID);
        ResultSet resultSet = statement.executeQuery();

        if (resultSet.next()) {
            int maxQuantity = resultSet.getInt("maxquantity");
            if (maxQuantity < (Integer.parseInt(quantity.getText()) + enteredQuantity)) {
                JOptionPane.showMessageDialog(this, "Insufficient space in inventory.");
            } else {
                try {
                    // Check if product with the given pid and sid exists in inventory table
                    String selectQuery = "SELECT * FROM inventory WHERE pid = ? AND sid = ?";
                    PreparedStatement selectStatement = con.prepareStatement(selectQuery);
                    selectStatement.setString(1, productID);
                    selectStatement.setString(2, sid);
                    ResultSet resultSet1 = selectStatement.executeQuery();

                    if (resultSet1.next()) {
                        int currentQuantity = resultSet1.getInt("quantity");
                        int newQuantity = currentQuantity + enteredQuantity;

                        // Update the quantity for the existing entry
                        String updateQuery = "UPDATE inventory SET quantity = ? WHERE pid = ? AND sid = ?";
                        PreparedStatement updateStatement = con.prepareStatement(updateQuery);
                        updateStatement.setInt(1, newQuantity);
                        updateStatement.setString(2, productID);
                        updateStatement.setString(3, sid);
                        updateStatement.executeUpdate();

                        JOptionPane.showMessageDialog(this, "Quantity updated in inventory.");
                    } else {
                        // Insert a new entry into the inventory table
                        String insertQuery = "INSERT INTO inventory VALUES (?, ?, ?, ?)";
                        PreparedStatement insertStatement = con.prepareStatement(insertQuery);
                        insertStatement.setString(1, productID);
                        insertStatement.setString(2, sid);
                        insertStatement.setInt(3, enteredQuantity);
                        insertStatement.setInt(4, 0); // Assuming max_quantity is initialized to 0
                        insertStatement.executeUpdate();

                        JOptionPane.showMessageDialog(this, "New entry inserted into inventory.");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(supplier.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "An error occurred while updating inventory: " + ex.getMessage());
                }
            }
        } else {
            // Product ID not found in inventory table
            JOptionPane.showMessageDialog(this, "Product ID not found in inventory.");
        }
    } catch (SQLException ex) {
        Logger.getLogger(supplier.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "An error occurred while checking inventory: " + ex.getMessage());
    }

    }//GEN-LAST:event_supplyMouseClicked

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
 this.dispose();
        new home().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_homeMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
 this.dispose();
 new supplier_entry().setVisible(true);
    }//GEN-LAST:event_backMouseClicked

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new supplier("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton home;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jlabel1;
    private javax.swing.JLabel jlabel2;
    private javax.swing.JTextField pid;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton supply;
    // End of variables declaration//GEN-END:variables
}
